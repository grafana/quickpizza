x-quickpizza-env-common: &quickpizza-env-common
  QUICKPIZZA_OTLP_ENDPOINT: http://alloy:4318
  QUICKPIZZA_TRUST_CLIENT_TRACEID: true
  QUICKPIZZA_ENABLE_ALL_SERVICES: 0 # 0 for microservice mode
  QUICKPIZZA_CATALOG_ENDPOINT: http://catalog:3333
  QUICKPIZZA_COPY_ENDPOINT: http://copy:3333
  QUICKPIZZA_WS_ENDPOINT: http://ws:3333
  QUICKPIZZA_RECOMMENDATIONS_ENDPOINT: http://recommendations:3333
  QUICKPIZZA_CONFIG_ENDPOINT: http://config:3333

name: quickpizza
services:
  alloy:
    image: grafana/alloy:v1.9.1
    container_name: alloy
    labels:
    - "service.type=instrumentation"
    volumes:
      - "./alloy/${ALLOY_FILE_NAME:-cloud.alloy}:/config.alloy:Z"
      - "${DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock"
    command:
      - run
      - /config.alloy
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=public-preview
    ports:
      - "12345:12345"
    environment:
      QUICKPIZZA_HOST: public-api:3333
      # must be set with an .env file
      GRAFANA_CLOUD_TOKEN: "${GRAFANA_CLOUD_TOKEN}"
      GRAFANA_CLOUD_STACK: "${GRAFANA_CLOUD_STACK}"
      # set only when ALLOY_FILE_NAME=cloud.otlp.alloy
      GRAFANA_CLOUD_OTLP_ENDPOINT: "${GRAFANA_CLOUD_OTLP_ENDPOINT:-}"
      GRAFANA_CLOUD_INSTANCE_ID: "${GRAFANA_CLOUD_INSTANCE_ID:-}"
      # enable Faro integration
      QUICKPIZZA_CONF_FARO_URL: "${QUICKPIZZA_CONF_FARO_URL:-}"
      QUICKPIZZA_CONF_FARO_APP_NAME: "${QUICKPIZZA_CONF_FARO_APP_NAME:-}"
    depends_on:
      - catalog
      - config
      - copy
      - public-api
      - recommendations
      - ws

  catalog:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: catalog
    labels:
    - "service.type=application"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_CATALOG_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "catalog"
      QUICKPIZZA_OTEL_SERVICE_NAME: "catalog"

  config:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: config
    labels:
    - "service.type=application"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_CONFIG_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "config"
      QUICKPIZZA_OTEL_SERVICE_NAME: "config"
  copy:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: copy
    labels:
    - "service.type=application"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_COPY_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "copy"
      QUICKPIZZA_OTEL_SERVICE_NAME: "copy"

  public-api:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: public-api
    labels:
    - "service.type=application"
    ports:
      - "3333:3333"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_PUBLIC_API_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "public-api"
      QUICKPIZZA_OTEL_SERVICE_NAME: "public-api"

  recommendations:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: recommendations
    labels:
    - "service.type=application"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_RECOMMENDATIONS_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "recommendations"
      QUICKPIZZA_OTEL_SERVICE_NAME: "recommendations"

  ws:
    image: ${QUICKPIZZA_IMAGE:-ghcr.io/grafana/quickpizza-local:latest}
    container_name: ws
    labels:
    - "service.type=application"
    environment:
      <<: *quickpizza-env-common
      QUICKPIZZA_ENABLE_WS_SERVICE: "1"
      QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID: "ws"
      QUICKPIZZA_OTEL_SERVICE_NAME: "ws"
  
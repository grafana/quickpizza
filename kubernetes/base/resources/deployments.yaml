apiVersion: apps/v1
kind: Deployment
metadata:
  # unique name for this deployment resource
  name: quickpizza-frontend
  labels: &frontendLabels
    # application name: groups all related resources
    app.k8s.io/name: quickpizza
    # component type: defines the role of this deployment
    app.kubernetes.io/component: service
    # instance id: used for service discovery and telemetry (service.name/service_name attrs)
    app.kubernetes.io/instance: frontend-gateway
spec:
  replicas: 1
  selector:
    matchLabels: *frontendLabels
  template:
    metadata:
      labels: *frontendLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_FRONTEND
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-config
  labels: &configLabels
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: config
spec:
  replicas: 1
  selector:
    matchLabels: *configLabels
  template:
    metadata:
      labels: *configLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_CONFIG
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-ws
  labels: &wsLabels
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ws
spec:
  replicas: 1
  selector:
    matchLabels: *wsLabels
  template:
    metadata:
      labels: *wsLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_WS
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-catalog
  labels: &catalogLabels
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: catalog
spec:
  replicas: 1
  selector:
    matchLabels: *catalogLabels
  template:
    metadata:
      labels: *catalogLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_CATALOG
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-copy
  labels: &copyLabels
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: copy
spec:
  replicas: 1
  selector:
    matchLabels: *copyLabels
  template:
    metadata:
      labels: *copyLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_COPY
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quickpizza-recommendations
  labels: &recommendationsLabels
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: recommendations
spec:
  replicas: 1
  selector:
    matchLabels: *recommendationsLabels
  template:
    metadata:
      labels: *recommendationsLabels
    spec:
      restartPolicy: Always
      containers:
        - name: quickpizza
          image: ghcr.io/grafana/quickpizza-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3333
          envFrom:
            - configMapRef:
                name: quickpizza-env-common
            - configMapRef:
                name: quickpizza-env
                optional: true
          env:
            - name: QUICKPIZZA_RECOMMENDATIONS
              value: "1"
            - name: QUICKPIZZA_OTEL_SERVICE_INSTANCE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: QUICKPIZZA_OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/instance']